#!/bin/bash
#
# Run commands for the Soundstorm application within a Docker container.

case "$1" in
  init)     # build containers and set up the database
    export RAILS_PORT="3$((RANDOM%1000))"
    echo "RAILS_PORT=$RAILS_PORT" > "$PWD"/.env
    PUMA_DEV="$HOME/.puma-dev"
    if [[ -d "$PUMA_DEV" ]]; then
      if [[ -x "$PUMA_DEV/soundstorm" ]]; then
        echo "$RAILS_PORT" > "$PUMA_DEV/soundstorm"
      fi
    fi
    docker-compose run web bin/rails tmp:clear log:clear
    ;;
  logs)     # view web application logs
    docker-compose logs -f web
    ;;
  start)    # start all containers
    docker-compose up -d
    echo "Soundstorm has started at https://soundstorm.test"
    ;;
  stop)     # stop and remove running containers
    docker-compose down
    echo "Soundstorm has shut down"
    ;;
  restart)  # restart the web container
    docker-compose restart web
    echo "Soundstorm has restarted"
    ;;
  build)    # rebuild the web app image
    docker-compose build web
    ;;
  ship)     # build and ship the production image to the registry
    RAILS_ENV="production" docker-compose build web &&
      docker-compose push web
    ;;
  *)        # delegate unknown commands to ./bin/rails
    docker-compose run web "bin/rails $*"
    ;;
esac
