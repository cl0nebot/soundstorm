module PaperTrail
  decorate Version do
    decorated do
      after_create :broadcast

      delegate :actor, :followers, to: :whodunnit
      delegate :activity_id, to: :item
    end

    class_methods do
      def from_remote(activity, user)
        create!(
          item: activity.record,
          event: activity.type,
          whodunnit: user.to_global_id,
          object: activity.payload,
          remote: true
        )
      end
    end

    def message
      ActivityPub::Message.new(
        id: item.activity_id,
        type: item_type,
        published: created_at,
        actor: actor,
        payload: item.as_activity
      )
    end

    def broadcast
      BroadcastMessageJob.perform_later(self)
    end
  end
end
