module PaperTrail
  decorate Version do
    decorated do
      after_create :broadcast

      delegate :followers, to: :whodunnit
      delegate :activity_id, :as_activity, to: :item

      scope :unpublished, -> { where(broadcasted_at: nil) }
    end

    def type
      event.classify
    end

    def message
      ActivityPub::Message.new(
        id: activity_id,
        type: type,
        published: created_at,
        actor: whodunnit.actor,
        payload: as_activity
      )
    end

    def broadcasted?
      broadcasted_at.present?
    end

    def broadcast
      BroadcastMessageJob.perform_later(self) unless broadcasted?
    end
  end
end
