#
# Production services configuration for Soundstorm. Adds the `redis` and
# `sidekiq` services, and disables `mailcatcher`. All services in
# production are created using released images from the registry, which
# have been ostensibly verified as working.

version: '3'
services:
  # Use CloudWatch logs in the database
  db:
    logging:
      driver: awslogs
      options:
        awslogs-group: soundstorm
        awslogs-region: us-east-1
        awslogs-stream-prefix: db

  # Redis stores the ephemeral Rails/HTTP cache and Sidekiq job queue
  redis:
    image: redis
    volumes:
      - redis:/data
    logging:
      driver: awslogs
      options:
        awslogs-group: soundstorm
        awslogs-region: us-east-1
        awslogs-stream-prefix: redis

  # Speed up application deployment by launching an image rather than
  # building a full container, such as in development. Dependencies are
  # also preloaded onto the image and the entrypoint script for
  # installing deps is disabled. Migrations still occur in the
  # ENTRYPOINT, however, so as not to depend the entire app on the
  # database being fully up.
  web:
    build:
      context: .
      args:
        - RAILS_ENV=production
    image: weathermen/soundstorm
    expose:
      - 3000
    depends_on:
      - db
      - redis
    env_file:
      - .env.production
      - .env.secrets
    logging:
      driver: awslogs
      options:
        awslogs-group: soundstorm
        awslogs-region: us-east-1
        awslogs-stream-prefix: web

  # Lock down Elasticsearch clients to other Docker hosts
  search:
    expose:
      - 9200
    logging:
      driver: awslogs
      options:
        awslogs-group: soundstorm
        awslogs-region: us-east-1
        awslogs-stream-prefix: search

  # Background job processor for the application, running background
  # jobs within the Rails context. This container will always use the
  # same image as +web+, ensuring that both services are launched with
  # the same codebase.
  queue:
    image: weathermen/soundstorm
    command: bin/sidekiq
    depends_on:
      - db
      - redis
      - web
    env_file:
      - .env.production
      - .env.secrets
    logging:
      driver: awslogs
      options:
        awslogs-group: soundstorm
        awslogs-region: us-east-1
        awslogs-stream-prefix: queue

  # Caddy outbound HTTP server for serving static files and terminating SSL.
  # The app is proxied underneath this server so that all requests going
  # to it are over HTTPS. It redirects all :80 requests to :443. This
  # also uses the same image as +web+ so it can share static assets as
  # well as a +Caddyfile+ configuration.
  httpd:
    image: weathermen/soundstorm
    command: caddy
    depends_on:
      - web
    ports:
      - "80:80"
      - "443:443"
    env_file:
      - .env.production
      - .env.secrets
    logging:
      driver: awslogs
      options:
        awslogs-group: soundstorm
        awslogs-region: us-east-1
        awslogs-stream-prefix: httpd

volumes:
  redis:
