#
# Production services configuration for Soundstorm. Adds the `redis` and
# `sidekiq` services, and disables `mailcatcher`. All services in
# production are created using released images from the registry, which
# have been ostensibly verified as working.

version: '3'
services:
  # Redis stores the ephemeral Rails/HTTP cache and Sidekiq job queue
  redis:
    image: redis
    volumes:
      - redis:/data

  # Speed up application deployment by launching an image rather than
  # building a full container, such as in development. Dependencies are
  # also preloaded onto the image and the entrypoint script for
  # installing deps is disabled. Migrations still occur in the
  # ENTRYPOINT, however, so as not to depend the entire app on the
  # database being fully up.
  web:
    build:
      context: .
      args:
        - RAILS_ENV=production
    image: tubbo/soundstorm
    volumes:
      - code:/srv
    expose:
      - 3000
    depends_on:
      - db
      - redis
    env_file:
      - .env.production
      - .env.secrets

  # Background job processor for the application, running background
  # jobs within the Rails context. This container will always use the
  # same image as +web+, ensuring that both services are launched with
  # the same codebase.
  sidekiq:
    image: tubbo/soundstorm
    command: bin/bundle exec sidekiq -C config/sidekiq.yml
    depends_on:
      - db
      - redis
      - web
    env_file:
      - .env.production
      - .env.secrets

  nginx:
    image: nginx
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - code:/srv
      - ./config/ssl:/etc/ssl
    configs:
      - source: config/nginx.conf
        target: /etc/nginx/sites.d/soundstorm.conf

volumes:
  redis:
  code:
